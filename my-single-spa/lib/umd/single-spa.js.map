{"version":3,"file":"single-spa.js","sources":["../../src/application/app_helpers.js","../../src/start.js","../../src/navigations/reroute.js","../../src/application/app.js"],"sourcesContent":["//描述应用的整个状态，14个状态\r\nexport const not_load = 'not_load'; //初始状态\r\nexport const loading_source_code = 'loading_source_code';\r\nexport const not_bootstrap = 'not_bootstrap'\r\nexport const bootstraping = 'bootstraping'//启动中\r\nexport const not_mount = 'not_mount';\r\nexport const mounting = 'mounting';\r\nexport const mounted = 'mounted';\r\nexport const updating = 'updating';\r\nexport const unmounting = 'unmounting'; //卸载中 解除绑定\r\nexport const unload = 'unload'; //完全卸载\r\nexport const load_err = 'load_err'; //加载失败\r\nexport const skip_becauce_broken = 'skip_becauce_broken';\r\n//当前应用是否被激活，挂载完才算是被激活\r\nexport function isActive(app){\r\n    return app.status === mounted\r\n}\r\n//当前应用是否要被激活\r\n// 如果返回true，应用应该开始初始化\r\nexport function shouldBeActive(app){\r\n    return app.activeWhen(window.location)\r\n}\r\n","import { reroute } from \"./navigations/reroute\";\r\n\r\nexport let started = false;\r\nexport function start(){\r\n    //需要挂载应用\r\n    started = true;\r\n    reroute() //除了加载应用，还需要挂载\r\n}","import { started } from \"../start\";\r\n\r\n// 核心应用处理方法\r\nexport function reroute(){\r\n    // 需要获取要加载的应用\r\n    // 需要获取要被挂载的应用\r\n    // 哪些应用需要被卸载\r\n    if(started){\r\n        console.log('调用start');\r\n        return performAppChanges(); //根据路径装载应用\r\n    }else{\r\n        //第一次调用预先加载\r\n        // 注册应用时，需要预先加载\r\n        console.log('调用register');\r\n        return loadApps();\r\n        \r\n    }\r\n\r\n    async function loadApps(){\r\n\r\n    }\r\n\r\n    async function performAppChanges(){\r\n\r\n    }\r\n}","\r\n/**\r\n * \r\n * @param {*} appName 应用名称\r\n * @param {*} loadApp  加载的应用\r\n * @param {*} activeWhen 什么时候激活\r\n * @param {*} customProps 自定义属性\r\n */\r\n\r\nimport { not_load, skip_becauce_broken, shouldBeActive, loading_source_code } from \"./app_helpers\";\r\nimport { reroute } from \"../navigations/reroute\";\r\n\r\n const apps = [] //用来存放所有的应用\r\nexport function registerApplication(appName, loadApp, activeWhen, customProps){\r\n apps.push({ //这里就将应用注册好了\r\n     name: appName,\r\n     loadApp,\r\n     activeWhen,\r\n     customProps,\r\n     status: not_load\r\n });\r\n console.log(apps)\r\nreroute() //加载应用\r\n // vue 一系列的生命周期，跟踪\r\n // 应用的生命周期\r\n // 维护应用所有的状态，状态机\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function getAppChanges(){\r\n    const appsToUnmount = [];\r\n    const appsToLoad = [];\r\n    const appsToMount = [];\r\n    apps.forEach(app => {\r\n        // 需不需被加载\r\n        const appShouldBeActive = shouldBeActive(app)\r\n        switch (app.status) {\r\n            case not_load:\r\n            case loading_source_code: \r\n                if(appShouldBeActive){\r\n                    appsToLoad.push(app)\r\n                }\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    })\r\n}"],"names":[],"mappings":";;;;;;IAAA;IACO,MAAM,QAAQ,GAAG,UAAU,CAAC;;ICC5B,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,SAAS,KAAK,EAAE;IACvB;IACA,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,OAAO,GAAE;IACb;;ICLA;IACO,SAAS,OAAO,EAAE;IACzB;IACA;IACA;IACA,IAAI,GAAG,OAAO,CAAC;IACf,QAAQ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC/B,QAAQ,OAAO,iBAAiB,EAAE,CAAC;IACnC,KAAK,KAAI;IACT;IACA;IACA,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAClC,QAAQ,OAAO,QAAQ,EAAE,CAAC;IAC1B;IACA,KAAK;AACL;IACA,IAAI,eAAe,QAAQ,EAAE;AAC7B;IACA,KAAK;AACL;IACA,IAAI,eAAe,iBAAiB,EAAE;AACtC;IACA,KAAK;IACL;;ICbC,MAAM,IAAI,GAAG,GAAE;IACT,SAAS,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC;IAC9E,CAAC,IAAI,CAAC,IAAI,CAAC;IACX,KAAK,IAAI,EAAE,OAAO;IAClB,KAAK,OAAO;IACZ,KAAK,UAAU;IACf,KAAK,WAAW;IAChB,KAAK,MAAM,EAAE,QAAQ;IACrB,EAAE,CAAC,CAAC;IACJ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;IAClB,OAAO,GAAE;IACT;IACA;IACA;AACA;AACA;AACA;IACA;;;;;;;;;;;"}